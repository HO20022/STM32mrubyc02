/* Auto generated by make_method_table.rb */
#include "_autogen_builtin_symbol.h"

/*===== Task class =====*/
static const mrbc_sym method_symbols_Task[] = {
  MRBC_SYM(current),
  MRBC_SYM(get),
  MRBC_SYM(join),
  MRBC_SYM(list),
  MRBC_SYM(name),
  MRBC_SYM(name_EQ),
  MRBC_SYM(name_list),
  MRBC_SYM(pass),
  MRBC_SYM(priority),
  MRBC_SYM(priority_EQ),
  MRBC_SYM(resume),
  MRBC_SYM(status),
  MRBC_SYM(suspend),
  MRBC_SYM(terminate),
};

static const mrbc_func_t method_functions_Task[] = {
  c_task_get,
  c_task_get,
  c_task_join,
  c_task_list,
  c_task_name,
  c_task_set_name,
  c_task_name_list,
  c_task_pass,
  c_task_priority,
  c_task_set_priority,
  c_task_resume,
  c_task_status,
  c_task_suspend,
  c_task_terminate,
};

struct RBuiltinClass mrbc_class_Task = {
  .sym_id = MRBC_SYM(Task),
  .num_builtin_method = sizeof(method_symbols_Task) / sizeof(mrbc_sym),
  .super = MRBC_CLASS(Object),
  .method_link = 0,
#if defined(MRBC_DEBUG)
  .name = "Task",
#endif
  .method_symbols = method_symbols_Task,
  .method_functions = method_functions_Task,
};


/*===== Mutex class =====*/
static const mrbc_sym method_symbols_Mutex[] = {
  MRBC_SYM(lock),
  MRBC_SYM(locked_Q),
  MRBC_SYM(new),
  MRBC_SYM(owned_Q),
  MRBC_SYM(try_lock),
  MRBC_SYM(unlock),
};

static const mrbc_func_t method_functions_Mutex[] = {
  c_mutex_lock,
  c_mutex_locked,
  c_mutex_new,
  c_mutex_owned,
  c_mutex_trylock,
  c_mutex_unlock,
};

struct RBuiltinClass mrbc_class_Mutex = {
  .sym_id = MRBC_SYM(Mutex),
  .num_builtin_method = sizeof(method_symbols_Mutex) / sizeof(mrbc_sym),
  .super = MRBC_CLASS(Object),
  .method_link = 0,
#if defined(MRBC_DEBUG)
  .name = "Mutex",
#endif
  .method_symbols = method_symbols_Mutex,
  .method_functions = method_functions_Mutex,
};


/*===== VM class =====*/
static const mrbc_sym method_symbols_VM[] = {
  MRBC_SYM(tick),
};

static const mrbc_func_t method_functions_VM[] = {
  c_vm_tick,
};

struct RBuiltinClass mrbc_class_VM = {
  .sym_id = MRBC_SYM(VM),
  .num_builtin_method = sizeof(method_symbols_VM) / sizeof(mrbc_sym),
  .super = MRBC_CLASS(Object),
  .method_link = 0,
#if defined(MRBC_DEBUG)
  .name = "VM",
#endif
  .method_symbols = method_symbols_VM,
  .method_functions = method_functions_VM,
};
